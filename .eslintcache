[{"E:\\Programming\\React JS Youtube\\demo-project\\src\\index.js":"1","E:\\Programming\\React JS Youtube\\demo-project\\src\\App.js":"2","E:\\Programming\\React JS Youtube\\demo-project\\src\\reportWebVitals.js":"3","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\YouTubeForm.js":"4","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\TextError.js":"5","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\FormikContainer.js":"6","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\FormikControl.js":"7","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Input.js":"8","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Textarea.js":"9","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Select.js":"10","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\RadioButton.js":"11","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\CheckBoxList.js":"12","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\DatePicker.js":"13","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\LoginForm.js":"14","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Registration.js":"15","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\CourseEntrollmentForm.js":"16","E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\ChakraInput.js":"17"},{"size":226,"mtime":1610547071363,"results":"18","hashOfConfig":"19"},{"size":721,"mtime":1611139176394,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":7126,"mtime":1610964421498,"results":"22","hashOfConfig":"19"},{"size":191,"mtime":1610702221030,"results":"23","hashOfConfig":"19"},{"size":2835,"mtime":1611071216024,"results":"24","hashOfConfig":"19"},{"size":854,"mtime":1611138522407,"results":"25","hashOfConfig":"19"},{"size":455,"mtime":1611035879542,"results":"26","hashOfConfig":"19"},{"size":476,"mtime":1611036882698,"results":"27","hashOfConfig":"19"},{"size":763,"mtime":1611039301163,"results":"28","hashOfConfig":"19"},{"size":1166,"mtime":1611126718127,"results":"29","hashOfConfig":"19"},{"size":1172,"mtime":1611134283334,"results":"30","hashOfConfig":"19"},{"size":1046,"mtime":1611135156084,"results":"31","hashOfConfig":"19"},{"size":1605,"mtime":1611138599648,"results":"32","hashOfConfig":"19"},{"size":2275,"mtime":1611132781745,"results":"33","hashOfConfig":"19"},{"size":2413,"mtime":1611134836434,"results":"34","hashOfConfig":"19"},{"size":858,"mtime":1611138301422,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jihqyl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\Programming\\React JS Youtube\\demo-project\\src\\index.js",[],["75","76"],"E:\\Programming\\React JS Youtube\\demo-project\\src\\App.js",["77","78","79","80"],"import logo from './logo.svg';\nimport './App.css';\nimport FormikContainer from './components/FormikContainer';\nimport LoginForm from './components/LoginForm';\nimport Registration from './components/Registration';\nimport CourseEntrollmentForm from './components/CourseEntrollmentForm';\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\"\n\n// 2. Extend the theme to include custom colors, fonts, etc\nconst colors = {\n  brand: {\n    900: \"#1a365d\",\n    800: \"#153e75\",\n    700: \"#2a69ac\",\n  },\n}\n\nconst theme = extendTheme({ colors })\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <div className=\"App\">\n        <LoginForm />\n      </div>\n    </ChakraProvider>\n\n  );\n}\n\nexport default App;\n","E:\\Programming\\React JS Youtube\\demo-project\\src\\reportWebVitals.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\YouTubeForm.js",["81"],"import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport TextError from \"./TextError\";\r\n\r\nconst initialValues = {\r\n  name: 'Bitan',\r\n  email: '',\r\n  channel: '',\r\n  comments: '',\r\n  address: '',\r\n  social: {\r\n    facebook: '',\r\n    twitter: ''\r\n  },\r\n  phoneNumbers: ['', ''],\r\n  phNumbers: ['']\r\n}\r\nconst loadData = {\r\n  name: 'Bitan Das',\r\n  email: 'bitan@gmail.com',\r\n  channel: 'Bitan Channel',\r\n  comments: 'I love React',\r\n  address: 'Bauria, Howrah',\r\n  social: {\r\n    facebook: '',\r\n    twitter: ''\r\n  },\r\n  phoneNumbers: ['', ''],\r\n  phNumbers: ['']\r\n}\r\n\r\n\r\nconst onSubmit = (values, onSubmitProps) => {\r\n  // console.log(values);\r\n  console.log(onSubmitProps);\r\n  //after get Successful API response then set it to false\r\n  onSubmitProps.setSubmitting(false);\r\n  //reset the form after reset\r\n  onSubmitProps.resetForm();\r\n}\r\n\r\n//validation using yup library\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required('Name is required'),\r\n  email: yup.string().email('Invalid Email').required('Email is required'),\r\n  channel: yup.string().required('Channel is required')\r\n})\r\n\r\nconst validateComments = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Comments is required\"\r\n  }\r\n  return error;\r\n\r\n}\r\n\r\nfunction YouTubeForm() {\r\n  const [formValues, setFormValue] = useState(null);\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={formValues || initialValues}\r\n      onSubmit={onSubmit}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize>\r\n      {/* validateOnMount validateOnChange={false} validateOnBlur={false} */}\r\n\r\n      {\r\n        (formik) => {\r\n          console.log(\"Formik Object:::\", formik)\r\n          return (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label>Name:</label>\r\n                <Field type=\"text\" name=\"name\" id=\"name\" />\r\n                <ErrorMessage name=\"name\" component={TextError} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Email:</label>\r\n                <Field type=\"email\" name=\"email\" id=\"email\" />\r\n                <ErrorMessage name=\"email\">\r\n                  {\r\n                    (errorMsg) => <div className=\"error\">{errorMsg}</div>\r\n                  }\r\n\r\n                </ErrorMessage>\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Channel:</label>\r\n                <Field type=\"text\" name=\"channel\" id=\"channel\" />\r\n                <ErrorMessage name=\"channel\" component={TextError} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Comments:</label>\r\n                <Field as=\"textarea\" name=\"comments\" id=\"comments\" validate={validateComments} placeholder=\"Type your comments...\" />\r\n                <ErrorMessage name=\"comments\" component={TextError} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Address</label>\r\n                <FastField name=\"address\">\r\n                  {/*Rendering */}\r\n\r\n                  {\r\n\r\n                    (props) => {\r\n                      // console.log(\"Rendered\");\r\n                      const { field, form, meta } = props;\r\n                      // console.log(\"Props:::\", props);\r\n                      return (\r\n                        <div>\r\n                          <div>\r\n                            <input type=\"text\" id=\"address\" {...field} />\r\n                            {meta.error && meta.touched ? (<div className=\"error\">{meta.error}</div>) : null}\r\n                          </div>\r\n\r\n                        </div>\r\n                      )\r\n                    }\r\n                  }\r\n                </FastField>\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Facebook Profile</label>\r\n                <Field type=\"text\" name=\"social.facebook\" id=\"facebook\" />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Twitter Profile</label>\r\n                <Field type=\"text\" name=\"social.twitter\" id=\"twitter\" />\r\n              </div>\r\n              {/*------------------------------Phone Number Field------------------------ */}\r\n              <div className=\"form-control\">\r\n                <label>Primary Mobile Number</label>\r\n                <Field type=\"text\" name=\"phoneNumbers[0]\" id=\"primaryPhoneNumber\" />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Secondary Mobile Number</label>\r\n                <Field type=\"text\" name=\"phoneNumbers[1]\" id=\"secondaryPhoneNumber\" />\r\n              </div>\r\n\r\n              {/*-------------------Field Array Config----------------------- */}\r\n              <div className=\"form-control\">\r\n                <label>Mobile Number</label>\r\n                <FieldArray name=\"phNumbers\">\r\n                  {\r\n                    (fieldArrayProps) => {\r\n                      const { form, push, remove } = fieldArrayProps;\r\n                      const { values } = form;\r\n                      const { phNumbers } = values;\r\n                      // console.log(\"Form Error:::\", form.errors)\r\n                      return (\r\n                        <div>\r\n                          {phNumbers.map((phNumber, index) => (\r\n                            <div className=\"form-control\" key={index}>\r\n                              <Field type=\"text\" name={`phNumbers[${index}]`} />\r\n                              {\r\n                                index > 0 && <button type=\"button\" onClick={() => remove(index)}>Remove</button>\r\n                              }\r\n                            </div>\r\n                          ))}\r\n                          <button type=\"button\" onClick={() => push('')}>Add</button>\r\n                        </div>\r\n                      )\r\n                    }\r\n\r\n                  }\r\n                </FieldArray>\r\n              </div>\r\n\r\n              {/*  <button type=\"button\" onClick={() => formik.validateField('comments')}>Valid Comments</button>\r\n              <button type=\"button\" onClick={() => formik.validateForm()}>Valid All</button>\r\n\r\n              <button type=\"button\" onClick={() => formik.setFieldTouched('comments')}>Set Touched Comments</button>\r\n              <button type=\"button\" onClick={() => formik.setTouched(\r\n                {\r\n                  name: true,\r\n                  email: true,\r\n                  channel: true,\r\n                  comments: true\r\n                }\r\n\r\n              )}>Set Touched All</button> */}\r\n\r\n              <button type=\"reset\">Reset</button>\r\n              <button type=\"button\" onClick={() => setFormValue(loadData)}>Load Data</button>\r\n              <button type=\"submit\" disabled={!formik.isValid || formik.isSubmitting}>Submit</button>\r\n              {/* disabled={!(formik.isValid && formik.dirty)}\r\n              !formik.isValid\r\n              */}\r\n            </Form>\r\n          )\r\n        }\r\n      }\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default YouTubeForm;\r\n",["82","83"],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\TextError.js",[],["84","85"],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\FormikContainer.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\FormikControl.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Input.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Textarea.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Select.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\RadioButton.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\CheckBoxList.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\DatePicker.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\LoginForm.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\Registration.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\CourseEntrollmentForm.js",[],"E:\\Programming\\React JS Youtube\\demo-project\\src\\components\\ChakraInput.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":23},{"ruleId":"90","severity":1,"message":"95","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":20},{"ruleId":"90","severity":1,"message":"96","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":29},{"ruleId":"90","severity":1,"message":"97","line":109,"column":38,"nodeType":"92","messageId":"93","endLine":109,"endColumn":42},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","replacedBy":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"88","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FormikContainer' is defined but never used.","'Registration' is defined but never used.","'CourseEntrollmentForm' is defined but never used.","'form' is assigned a value but never used.",["102"],["103"],["102"],["103"],"no-global-assign","no-unsafe-negation"]